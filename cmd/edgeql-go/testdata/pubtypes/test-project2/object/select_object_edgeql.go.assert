// Code generated by github.com/geldata/gel-go/cmd/edgeql-go DO NOT EDIT.

package object

import (
	"context"
	_ "embed"

	"github.com/geldata/gel-go/geltypes"
)

//go:embed select_object.edgeql
var selectObjectCmd string

// SelectObjectResult
// is part of the return type for
// selectObject()
type SelectObjectResult struct {
	geltypes.Optional
	Name     string                         `gel:"Name"`
	Language string                         `gel:"Language"`
	Params   []SelectObjectResultParamsItem `gel:"Params"`
}

// SelectObjectResultParamsItem
// is part of the return type for
// selectObject()
type SelectObjectResultParamsItem struct {
	Name    string               `gel:"Name"`
	Default geltypes.OptionalStr `gel:"Default"`
}

// selectObject
// runs the query found in
// select_object.edgeql
func selectObject(
	ctx context.Context,
	client geltypes.Executor,
) (SelectObjectResult, error) {
	var result SelectObjectResult

	err := client.QuerySingle(
		ctx,
		selectObjectCmd,
		&result,
	)

	return result, err
}

// selectObjectJSON
// runs the query found in
// select_object.edgeql
// returning the results as json encoded bytes
func selectObjectJSON(
	ctx context.Context,
	client geltypes.Executor,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		selectObjectCmd,
		&result,
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
