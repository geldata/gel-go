// Code generated by github.com/geldata/gel-go/cmd/edgeql-go DO NOT EDIT.

package main

import (
	"context"
	_ "embed"

	gel "github.com/geldata/gel-go"
)

//go:embed json_scalar.edgeql
var jsonScalarCmd string

// jsonScalar
// runs the query found in
// json_scalar.edgeql
func jsonScalar(
	ctx context.Context,
	client *gel.Client,
	json []byte,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingle(
		ctx,
		jsonScalarCmd,
		&result,
		map[string]interface{}{
			"json": json,
		},
	)

	return result, err
}

// jsonScalarJSON
// runs the query found in
// json_scalar.edgeql
// returning the results as json encoded bytes
func jsonScalarJSON(
	ctx context.Context,
	client *gel.Client,
	json []byte,
) ([]byte, error) {
	var result []byte

	err := client.QuerySingleJSON(
		ctx,
		jsonScalarCmd,
		&result,
		map[string]interface{}{
			"json": json,
		},
	)
	if err != nil {
		return nil, err
	}

	return result, nil
}
